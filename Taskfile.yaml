# https://taskfile.dev
---
version: '3'

vars:
  PACKAGE: python_in_action
  DIST_DIR: dist
  PWD:
    sh: pwd

tasks:

  default:
    summary: |
      Just a list of documented tasks.
    silent: true
    cmds:
      - task --list

  clean:
    desc: Removes dist, *.pyc and some caches
    cmds:
      - rm -rf {{.DIST_DIR}} .mypy_cache .pytest_cache
      - find . -name "*.pyc" -print0 | xargs -0 rm || echo ""

  check:prepare:
    summary: |
      prepare check targets by creating appropriate directory
    run: once
    cmds:
      - mkdir -p {{.DIST_DIR}}/coverage

  build:
    desc: Build tarball and a wheel package.
    deps:
      - poetry:install
      - check:prepare
    cmds:
      - poetry build

  check:
    desc: Run whole test suite.
    deps:
      - check:flake8
      - check:mypy
      - check:pylint
      - check:safety
    cmds:
      - poetry run python {{.FILE}}
    vars:
      FILE:
        sh: git ls-files --other --modified --exclude-standard
    ignore_error: true

  check:pylint:
    desc: Check source code with pylint.
    deps:
      - poetry:install
      - check:prepare
    cmds:
      - poetry run pylint --exit-zero {{.PACKAGE}}
      - poetry run pylint {{.PACKAGE}} {{.XML_PARAMS}}
    vars:
      FORMAT: --output-format=pylint_junit.JUnitReporter
      JUNIT_FILE: ./{{.DIST_DIR}}/junit-pylint.xml
      XML_PARAMS: --output={{.JUNIT_FILE}} {{.FORMAT}}

  check:mypy:
    desc: Check source code with mypy.
    deps:
      - poetry:install
      - check:prepare
    cmds:
      - poetry run mypy -p {{.PACKAGE}} --junit-xml {{.JUNIT_FILE}}
    vars:
      JUNIT_FILE: ./{{.DIST_DIR}}/junit-mypy.xml

  check:safety:
    desc: Check source code with safety.
    deps:
      - poetry:install
      - check:prepare
    cmds:
      - poetry run safety check -i 49150 -i 48547

  check:flake8:
    desc: Check source code with flake8.
    deps:
      - poetry:install
      - check:prepare
    cmds:
      - poetry run flake8 --exit-zero {{.PACKAGE}} {{.XML_PARAMS}}
      - poetry run flake8 --show-source {{.PACKAGE}}
    vars:
      JUNIT_FILE: ./{{.DIST_DIR}}/junit-flake8.xml
      XML_PARAMS: --format junit-xml --output-file {{.JUNIT_FILE}}

  python:format:
    desc: Format Python files.
    deps:
      - task: poetry:install
    cmds:
      - poetry run black .

  poetry:install:
    desc: Install dependencies managed by Poetry.
    run: once
    cmds:
      - poetry install

  poetry:update:
    desc: Update dependencies managed by Poetry to their newest versions.
    run: once
    cmds:
      - poetry update

  poetry:init:
    desc: Initialize poetry env and add dev dependencies used in this Task-file.
    cmds:
      - poetry add -D black pylint-junit safety genbadge flake8-formatter-junit-xml typed-ast mypy coverage defusedxml

  poetry:shell:
    desc: Open a poetry shell.
    interactive: true
    cmds:
      - poetry shell
